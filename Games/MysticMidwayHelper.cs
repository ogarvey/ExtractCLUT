using System;
using System.Collections.Generic;
using System.Drawing;
using System.Linq;
using System.Threading.Tasks;
using ExtractCLUT.Helpers;
using ExtractCLUT.Writers;
using static ExtractCLUT.Helpers.ImageFormatHelper;

namespace ExtractCLUT.Games
{
    public static class MysticMidwayHelper
    {
        // Splits the Extracted Video files into chunks of 0x1228 bytes
        public static void SplitVideoFile1(string videoFolder)
        {
            var actualPath = @"C:\Dev\Projects\Gaming\CD-i\PhantomExpress\NewRecords\phantom\video\output";

            var file = @"phantom_v_1_0_CLUT4_Double_1.bin";

            var counts = new int[] {
  01,
  01,
01,
01,
01,
01,
01,
01,
01,
01,
01,
01,
01,
01,
01,
01,
01,
01,
01,
01,
01,
01,
01,
01,
01,
01,
01,
01,
01,
01,
01,
01,
01,
01,
01,
01,
01,
01,
01,
01,
01,
01,
01,
01,
01,
01,
01,
01,
01,
01,
01,
01,
01,
01,
01,
01,
01,
02,
02,
02,
02,
03,
03,
02,
02,
02,
04,
05,
06,
03,
03,
03,
03,
03,
03,
03,
03,
02,
01,
01,
01,
01,
01,
03,
03,
04,
04,
04,
04,
04,
05,
07,
08,
08,
08,
07,
07,
07,
04,
01,
01,
01,
02,
02,
02,
02,
02,
03,
03,
04,
04,
03,
02,
02,
02,
02,
02,
02,
02,
01,
01,
01,
02,
02,
02,
02,
02,
02,
01,
01,
01,
02,
02,
02,
02,
02,
01,
01,
01,
02,
02,
02,
03,
03,
03,
03,
03,
03,
02,
01,
01,
01,
01,
01,
01,
02,
02,
02,
02,
02,
03,
02,
02,
01,
02,
02,
02,
02,
02,
02,
02,
02,
02,
02,
02,
02,
02,
01,
02,
02,
02,
02,
03,
03,
03,
03,
03,
02,
02,
01,
01,
02,
01,
02,
02,
01,
01,
01,
01,
02,
02,
02,
02,
02,
02,
02,
02,
02,
02,
02,
03,
03,
03,
03,
04,
04,
03,
02,
01,
01,
02,
02,
02,
02,
02,
02,
02,
03,
03,
03,
03,
02,
01,
01,
01,
02,
03,
02,
01,
02,
02,
02,
02,
02,
02,
02,
02,
02,
01,
01,
01,
02,
02,
02,
02,
02,
02,
03,
03,
03,
03,
03,
02,
01,
01,
01,
02,
02,
03,
03,
03,
04,
05,
05,
06,
04,
03,
01,
01,
01,
01,
02,
03,
03,
04,
05,
05,
05,
05,
05,
04,
04,
04,
04,
04,
04,
04,
06,
07,
06,
04,
03,
03,
02,
02,
03,
04,
04,
05,
05,
05,
05,
03,
03,
04,
04,
04,
03,
04,
08,
09,
08,
08,
07,
04,
01,
01,
01,
01,
01,
01,
01,
02,
02,
02,
02,
03,
03,
03,
02,
02,
01,
02,
01,
02,
02,
02,
02,
02,
02,
02,
02,
02,
03,
02,
01,
02,
03,
03,
03,
03,
03,
04,
04,
03,
03,
03,
03,
03,
02,
02,
02,
02,
01,
01,
01,
01,
01,
01,
01,
01,
02,
02,
02,
02,
02,
02,
02,
02,
02,
02,
01,
02,
02,
02,
02,
02,
02,
03,
03,
03,
02,
02,
02,
02,
02,
02,
02,
01,
02,
02,
02,
02,
02,
03,
03,
03,
02,
02,
01,
01,
02,
02,
02,
02,
02,
02,
02,
02,
02,
02,
02,
02,
02,
02,
02,
03,
03,
03,
04,
03,
03,
03,
03,
03,
02,
02,
02,
01,
01,
01,
02,
02,
02,
02,
02,
01,
01,
02,
02,
02,
02,
02,
02,
02,
02,
02,
01,
02,
02,
02,
02,
02,
03,
03,
03,
03,
03,
03,
03,
03,
03,
03,
01,
01,
01,
01,
02,
02,
02,
01,
02,
02,
02,
03,
03,
03,
03,
02,
02,
03,
03,
03,
03,
03,
04,
04,
03,
03,
03,
02,
02,
02,
01,
01,
01,
01,
02,
02,
02,
02,
03,
03,
03,
03,
02,
02,
01,
01,
01,
01,
01,
01,
01,
02,
02,
02,
02,
01,
01,
01,
01,
02,
02,
03,
04,
04,
05,
05,
06,
08,
07,
04,
01,
01,
03,
04,
04,
04,
04,
05,
05,
03,
03,
03,
04,
05,
04,
04,
04,
04,
04,
04,
04,
04,
04,
06,
07,
07,
05,
04,
05,
05,
06,
06,
05,
04,
04,
04,
04,
04,
04,
04,
04,
04,
04,
04,
04,
04,
04,
07,
09,
09,
08,
08,
06,
02,
01,
01,
01,
01,
01,
01,
01,
01,
02,
02,
02,
02,
02,
02,
02,
02,
01,
01,
01,
01,
01,
01,
01,
01,
02,
01,
02,
02,
02,
02,
02,
03,
03,
03,
02,
01,
01,
01,
02,
02,
02,
02,
02,
02,
01,
01,
01,
01,
01,
01,
02,
02,
02,
02,
02,
02,
02,
02,
02,
02,
02,
02,
01,
01,
01,
01,
02,
02,
02,
02,
02,
02,
01,
01,
01,
01,
01,
01,
02,
02,
02,
02,
02,
01,
01,
01,
01,
01,
02,
02,
02,
02,
02,
02,
02,
02,
02,
01,
01,
01,
01,
02,
02,
02,
02,
02,
02,
02,
01,
01,
01,
01,
01,
01,
02,
02,
02,
02,
02,
02,
02,
01,
01,
01,
01,
01,
01,
01,
01,
02,
02,
02,
02,
02,
02,
01,
01,
01,
02,
02,
02,
02,
02,
02,
02,
02,
02,
02,
01,
01,
01,
01,
02,
01,
02,
02,
02,
02,
02,
01,
01,
01,
01,
02,
02,
02,
02,
02,
01,
01,
02,
02,
02,
02,
02,
02,
02,
02,
02,
01,
01,
01,
01,
01,
01,
01,
01,
01,
02,
02,
01,
01,
01,
01,
01,
01,
01,
02,
02,
02,
02,
02,
02,
02,
02,
02,
01,
01,
01,
01,
01,
01,
02,
02,
02,
01,
01,
01,
01,
01,
02,
02,
02,
02,
02,
01,
01,
01,
02,
03,
03,
03,
04,
04,
05,
07,
09,
07,
06,
02,
01,
01,
02,
03,
03,
05,
04,
05,
04,
02,
02,
02,
03,
04,
05,
06,
06,
03,
03,
02,
02,
02,
02,
02,
02,
04,
04,
05,
09,
09,
08,
08,
07,
06,
03,
01,
01,
01,
01,
01,
01,
01,
01,
01,
01,
01,
02,
03,
02,
01,
01,
01,
02,
02,
02,
03,
03,
02,
02,
01,
01,
01,
01,
02,
01,
02,
02,
02,
02,
02,
02,
01,
01,
01,
01,
01,
02,
02,
02,
02,
02,
02,
02,
03,
02,
02,
02,
02,
03,
04,
05,
04,
02,
02,
02,
02,
03,
03,
03,
03,
03,
03,
03,
03,
03,
03,
01,
01,
01,
01,
02,
02,
01,
01,
02,
02,
02,
02,
02,
02,
01,
02,
02,
02,
02,
02,
02,
02,
02,
02,
01,
01,
02,
02,
02,
03,
03,
03,
04,
03,
02,
02,
01,
02,
02,
02,
02,
02,
03,
03,
02,
01,
01,
01,
01,
01,
01,
01,
01,
01,
02,
02,
01,
01,
01,
01,
01,
02,
02,
02,
02,
02,
02,
02,
02,
02,
02,
02,
02,
02,
01,
01,
01,
01,
01,
01,
01,
01,
02,
02,
02,
03,
02,
01,
01,
01,
01,
02,
02,
02,
02,
03,
03,
03,
03,
03,
02,
02,
01,
01,
01,
02,
02,
02,
02,
02,
02,
02,
02,
02,
02,
02,
02,
01,
01,
02,
02,
02,
02,
01,
02,
02,
02,
01,
01,
01,
01,
01,
01,
01,
02,
03,
03,
04,
04,
05,
05,
06,
08,
07,
04,
01,
01,
02,
02,
02,
03,
03,
04,
04,
05,
04,
05,
05,
06,
06,
06,
03,
01,
01,
01,
01,
02,
02,
03,
03,
05,
04,
05,
05,
05,
06,
07,
04,
01,
01,
01,
01,
02,
01,
02,
02,
02,
01,
01,
01,
01
};

            var bytes = File.ReadAllBytes(Path.Combine(actualPath, file));
            var images = new List<Bitmap>();
            for (int i = 0, j = 0; i < bytes.Length; j++)
            {
                var count = counts[j];
                var size = count * 0x914;
                var bytesToTake = (count * 0x914) - 0x66;
                var palette = bytes.Skip(i).Take(0x66).ToArray();
                var colours = ColorHelper.ConvertBytesToRGB(palette);
                colours.AddRange(colours);
                colours.AddRange(colours);
                var imageBytes = bytes.Skip(i + 0x66).Take(bytesToTake).ToArray();
                var rleBytes = Rle7(imageBytes, 384, 240);
                var image = GenerateRle7Image(colours, rleBytes, 384, 240);
                images.Add(image);
                i += size;
            }

            var output = Path.Combine(actualPath, "output");
            if (!Directory.Exists(output))
            {
                Directory.CreateDirectory(output);
            }

            using (var gifWriter = new GifWriter(Path.Combine(output, "phantom_v_1_0_CLUT4_Double_1.gif"), 100, 0))
            {
                foreach (var image in images)
                {
                    gifWriter.WriteFrame(image);
                }
            }
        }
    }
}
